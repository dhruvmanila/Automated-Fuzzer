name: üêß Ruff ALT
on:
  push:
  pull_request:
  schedule:
    - cron: '0 22 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  ruff-alt-ci:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        downloader: [
          'FILES_11',
          'FILES_12',
          'FILES_13'
        ]

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y wget

      - name: Build
        run: cargo build --release

      - name: Install create_broken_files
        run: cargo install create_broken_files

      - name: Install ruff
        run: cargo install --git https://github.com/astral-sh/ruff.git ruff_cli

      - name: Download and prepare python data files
        run: |
          CURR_DIR=$(pwd)
          mkdir /opt/VALID_FILES_DIR
          mkdir /opt/POSSIBLY_BROKEN_FILES_DIR
          mkdir /opt/BROKEN_FILES_DIR
          
          cd /opt/POSSIBLY_BROKEN_FILES_DIR
          
          file_name=${{ matrix.downloader }}
          wget "https://github.com/qarmin/Automated-Fuzzer/releases/download/test/${file_name}.zip"
          unzip "${file_name}.zip"
          rm "${file_name}.zip"
          
          cd $CURR_DIR

      - name: Run app
        run: |
          mv fuzz_settings_ci_alt.toml fuzz_settings.toml
          timeout 10000 target/release/automated_fuzzer || true

      # Some output files can be not parsable or not broken if closed app before finish
      - name: Remove non crashing files
        run: |
          mv fuzz_settings_ci_remove_files.toml fuzz_settings.toml
          target/release/automated_fuzzer

      - name: Remove pycache
        run: |
          rm -rf /opt/BROKEN_FILES_DIR/__pycache__ || true

      - name: Store results
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: ignore
          name: ${{ matrix.downloader }}
          path: /opt/BROKEN_FILES_DIR

      - name: Exit when found broken files
        run: |
          [ "$(ls -A /opt/BROKEN_FILES_DIR)" ] && exit 1 || exit 0