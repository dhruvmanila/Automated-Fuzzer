name: üêß Ruff Format
on:
  push:
  pull_request:
  schedule:
    - cron: '0 22 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  ruff-normal-ci:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: FINDING_1
            files: "FILES_21"
          - name: FINDING_2
            files: "FILES_22"
          - name: FINDING_3
            files: "FILES_23"
          - name: FINDING_4
            files: "FILES_24"
          - name: FINDING_5
            files: "FILES_25"
          - name: FINDING_6
            files: "FILES_26"
          - name: FINDING_SHORTER
            files: "FILES_999"

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y wget pipx

      - name: Install create_broken_files and sd
        run: |
          cargo install create_broken_files
          cargo install sd

      - name: Change time
        if: matrix.name == 'FINDING_SHORTER'
        run: |
          cat src/apps/ruff.rs
          sd "black_timeout = 16499" "black_timeout = 100" format/settings_black_difference_ci.toml
          sd "black_timeout = 16499" "black_timeout = 100" format/settings_not_stable_ci.toml

      - name: Install ruff
        run: |
          git clone https://github.com/astral-sh/ruff.git ruff
          cd ruff
          sed -i '/\[profile.release\]/a overflow-checks = true' Cargo.toml
          sed -i '/\[profile.release\]/a debug-assertions = true' Cargo.toml
          sed -i '/\[profile.release\]/a debug = true' Cargo.toml
          rm rust-toolchain.toml
          cargo install --path crates/ruff
          cd ..

      - name: Install black and check version
        run: |
          pipx install black
          black --version

      - name: Build
        run: |
          cd format
          cargo build --release

      ###############################################################################################
      - name: Create folders
        run: |
          mkdir /opt/START_DIR/
          mkdir /opt/TEST_DIR/
          mkdir /opt/TEST_DIR2/
          mkdir /opt/BROKEN_FILES/

      - name: Download and prepare python data files
        run: |
          pwd
          CURR_DIR=$(pwd)
          
          cd /opt/START_DIR
          
          python3 "$CURR_DIR/download_helper.py" "${{ matrix.files }}"
          
          cd $CURR_DIR

      #      - name: Run app
      #        run: |
      #          pwd
      #          cd format
      #          mv settings_black_difference_ci.toml settings.toml
      #          RUST_BACKTRACE=1 target/release/formatter
      #
      #            - name: Zip folders
      #              run: |
      #                mkdir /opt/BLACK_DIFFERENCE
      #                if [ "$(ls -A /opt/BROKEN_FILES)" ]; then
      #                  zip -r /opt/BLACK_DIFFERENCE/${{ matrix.name }}.zip /opt/BROKEN_FILES
      #                fi
      #                rm -rf /opt/BROKEN_FILES
      #
      #      - name: Store results - black difference
      #        uses: actions/upload-artifact@v4
      #        with:
      #          if-no-files-found: ignore
      #          name: BLACK_DIFFERENCE_${{ matrix.name }}
      #          path: /opt/BLACK_DIFFERENCE/${{ matrix.name }}.zip
      ###############################################################################################
      - name: Remove all folders except START_DIR
        run: |
          rm -rf /opt/TEST_DIR/ || true
          rm -rf /opt/TEST_DIR2/ || true
          rm -rf /opt/BROKEN_FILES/ || true
          mkdir /opt/TEST_DIR/
          mkdir /opt/TEST_DIR2/
          mkdir /opt/BROKEN_FILES/

      - name: Run app
        run: |
          pwd
          cd format
          mv settings_not_stable_ci.toml settings.toml
          RUST_BACKTRACE=1 target/release/formatter

      - name: Zip folders
        run: |
          mkdir /opt/NOT_STABLE
          if [ "$(ls -A /opt/BROKEN_FILES)" ]; then
            zip -r /opt/NOT_STABLE/${{ matrix.name }}.zip /opt/BROKEN_FILES
          fi
          rm -rf /opt/BROKEN_FILES

      - name: Store results - not stable
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: ignore
          name: NOT_STABLE_${{ matrix.name }}
          path: /opt/NOT_STABLE/${{ matrix.name }}.zip
      ###############################################################################################
      - name: Remove all folders except START_DIR
        run: |
          rm -rf /opt/TEST_DIR/ || true
          rm -rf /opt/TEST_DIR2/ || true
          rm -rf /opt/BROKEN_FILES/ || true
          mkdir /opt/TEST_DIR/
          mkdir /opt/TEST_DIR2/
          mkdir /opt/BROKEN_FILES/

      - name: Run app
        run: |
          pwd
          cd format
          mv settings_parse_difference.toml settings.toml
          RUST_BACKTRACE=1 target/release/formatter

      - name: Zip folders
        run: |
          mkdir /opt/PARSE_DIFFERENCES
          if [ "$(ls -A /opt/BROKEN_FILES)" ]; then
            zip -r /opt/PARSE_DIFFERENCES/${{ matrix.name }}.zip /opt/BROKEN_FILES
          fi
          rm -rf /opt/BROKEN_FILES

      - name: Store results - not stable
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: ignore
          name: PARSE_DIFFERENCES_${{ matrix.name }}
          path: /opt/PARSE_DIFFERENCES/${{ matrix.name }}.zip

      - name: Exit when found broken files
        run: |
          [ "$(ls -A /opt/NOT_STABLE)" ] && exit 1 || true
          [ "$(ls -A /opt/BLACK_DIFFERENCE)" ] && exit 1 || true
          [ "$(ls -A /opt/PARSE_DIFFERENCES)" ] && exit 1 || true

