name: üêß Ruff Format
on:
  push:
  pull_request:
  schedule:
    - cron: '0 22 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  ruff-normal-ci:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: FINDING_1
            files: "FILES_21"
          - name: FINDING_2
            files: "FILES_22"
          - name: FINDING_3
            files: "FILES_23"
          - name: FINDING_4
            files: "FILES_24"
          - name: FINDING_5
            files: "FILES_25"
          - name: FINDING_6
            files: "FILES_26"
          - name: FINDING_SHORTER
            files: "FILES_999"

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y wget pipx

      - name: Install sd
        if: matrix.name == 'FINDING_SHORTER'
        run: cargo install sd

      - name: Change time
        if: matrix.name == 'FINDING_SHORTER'
        run: |
          cat src/apps/ruff.rs
          sd "black_timeout = 15500" "black_timeout = 100" format/settings_black_difference_ci.toml
          sd "black_timeout = 15500" "black_timeout = 100" format/settings_not_stable_ci.toml

      - name: Install ruff
        run: cargo install --git https://github.com/astral-sh/ruff.git ruff_cli

      - name: Install black and check version
        run: |
          pipx install black
          black --version

      - name: Build
        run: |
          cd format
          cargo build --release

      - name: Create folders
        run: |
          mkdir /opt/START_DIR/
          mkdir /opt/TEST_DIR/
          mkdir /opt/TEST_DIR2/
          mkdir /opt/BROKEN_FILES/

      - name: Download and prepare python data files
        run: |
          pwd
          CURR_DIR=$(pwd)
          
          cd /opt/START_DIR
          
          python3 "$CURR_DIR/download_helper.py" "${{ matrix.files }}"
          
          cd $CURR_DIR

      - name: Run app
        run: |
          pwd
          cd format
          mv settings_black_difference_ci.toml settings.toml
          target/release/formatter
          mv /opt/BROKEN_FILES /opt/BLACK_DIFFERENCE

      - name: Store results - black difference
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: ignore
          name: BLACK_DIFFERENCE_${{ matrix.name }}
          path: /opt/BLACK_DIFFERENCE

      - name: Remove all folders except START_DIR
        run: |
          rm -rf /opt/TEST_DIR/ || true
          rm -rf /opt/TEST_DIR2/ || true
          rm -rf /opt/BROKEN_FILES/ || true
          mkdir /opt/TEST_DIR/
          mkdir /opt/TEST_DIR2/
          mkdir /opt/BROKEN_FILES/

      - name: Run app
        run: |
          pwd
          cd format
          mv settings_not_stable_ci.toml settings.toml
          target/release/formatter
          mv /opt/BROKEN_FILES /opt/NOT_STABLE

      - name: Store results - not stable
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: ignore
          name: NOT_STABLE_${{ matrix.name }}
          path: /opt/NOT_STABLE

      - name: Exit when found broken files
        run: |
          [ "$(ls -A /opt/NOT_STABLE)" ] && exit 1 || true
          [ "$(ls -A /opt/BLACK_DIFFERENCE)" ] && exit 1 || true

