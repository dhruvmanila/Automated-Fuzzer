[general]
loop_number = 10 # How much creating/removing/checking steps will be executed
broken_files_for_each_file = 1# Number of broken files that will be created for each 1 valid file
generate_files = true # If true will generate broken files and save them to BROKEN_FILES_DIR(this folder will be removed after each run)
safe_run = false # only prints results from broken_files_dir, do not copy broken files or try to minimize output
copy_broken_files = true
broken_files_dir = "/home/rafal/Desktop/RunEveryCommand/AA_BROKEN_INPUT_FILES" # Place where possibly broken files are saved
minimize_output = true # Tries to remove some lines from output file, remember, that not always minimized file will produce same error - usually minimize output 2-100 times
minimization_attempts = 50 # Attemps to minimize code, if after 25 attempts from 50 minimization completelly
debug_print_results = false # Debug prints output of commands
debug_print_broken_files_creator = false # Debug prints results of command that created broken files

current_mode = "ruff"

# app_binary - place where binary exists
# app_config - path to configuration file
# extensions - list of extensions of tested files
# non_destructive_input_dir - folder which contains files to test, such files will not be overwriten
# base_of_valid_files - place with valid files
# output_dir - place where to save broken files
# binary_mode - used to minify output, if binary mode is on, then all minimization works on bytes, if is off, then minimization works on lines

[oxc]
app_binary = "/home/rafal/test/oxc/target/release/oxc_cli"
app_config = ""
extensions = "ts,js,mjs,mts"
base_of_valid_files = "/home/rafal/Desktop/RunEveryCommand/AA_JAVASCRIPT_VALID_FILES"
output_dir = "/home/rafal/Desktop/RunEveryCommand/oxc/Broken"
binary_mode = false

[mypy]
app_binary = "mypy"
app_config = ""
extensions = "py"
base_of_valid_files = "/home/rafal/Desktop/RunEveryCommand/AA_PYTHON_VALID_FILES"
output_dir = "/home/rafal/Desktop/RunEveryCommand/mypy/Broken"
binary_mode = false

[ruff]
app_binary = "ruff"
app_config = "/home/rafal/Desktop/RunEveryCommand/ruff/ruff.toml"
extensions = "py"
base_of_valid_files = "/home/rafal/Desktop/RunEveryCommand/AA_PYTHON_VALID_FILES"
output_dir = "/home/rafal/Desktop/RunEveryCommand/ruff/Broken"
binary_mode = false

[dlint]
app_binary = "/home/rafal/test/deno_lint/target/release/examples/dlint"
app_config = ""
extensions = "ts,js,mjs,mts"
base_of_valid_files = "/home/rafal/Desktop/RunEveryCommand/AA_JAVASCRIPT_VALID_FILES"
output_dir = "/home/rafal/Desktop/RunEveryCommand/dlint/Broken"
binary_mode = false

[rome]
app_binary = "rome"
app_config = ""
extensions = "ts,js,mjs,mts"
base_of_valid_files = "/home/rafal/Desktop/RunEveryCommand/AA_JAVASCRIPT_VALID_FILES"
output_dir = "/home/rafal/Desktop/RunEveryCommand/rome/Broken"
binary_mode = false

[image]
app_binary = "/home/rafal/Projekty/Rust/run_command_for_every_file/src/crates/image/target/release/image"
app_config = ""
extensions = "jpg, jpeg, png, bmp, tiff, tif, tga, ff, jif, jfi, webp, gif, ico, exr"
base_of_valid_files = "/home/rafal/Desktop/RunEveryCommand/AA_IMAGE_VALID_FILES"
output_dir = "/home/rafal/Desktop/RunEveryCommand/image/Broken"
binary_mode = true

[lofty]
app_binary = "/home/rafal/Projekty/Rust/run_command_for_every_file/src/crates/lofty/target/release/lofty"
app_config = ""
extensions = "mp3,flac,wav,ogg,m4a,aac,aiff,pcm,aif,aiff,aifc,m3a,mp2,mp4a,mp2a,mpga,wave,weba,wma,oga"
base_of_valid_files = "/home/rafal/Desktop/RunEveryCommand/AA_MUSIC_VALID_FILES"
output_dir = "/home/rafal/Desktop/RunEveryCommand/lofty/Broken"
binary_mode = true

[symphonia]
app_binary = "/home/rafal/Projekty/Rust/run_command_for_every_file/src/crates/symphonia/target/release/symphonia"
app_config = ""
extensions = "mp3,flac,wav,ogg,m4a,aac,aiff,pcm,aif,aiff,aifc,m3a,mp2,mp4a,mp2a,mpga,wave,weba,wma,oga"
base_of_valid_files = "/home/rafal/Desktop/RunEveryCommand/AA_MUSIC_VALID_FILES"
output_dir = "/home/rafal/Desktop/RunEveryCommand/symphonia/Broken"
binary_mode = true
